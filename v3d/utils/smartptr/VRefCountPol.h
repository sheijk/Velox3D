///////////////////////////////////////////////////////////
//
//  VRefCountPol.h
//  Implementation of the Class VRefCountPol
//  Generated by Enterprise Architect
//  Created on:      19-Mar-2003 03:00:15
//  Original author: sheijk
//  
///////////////////////////////////////////////////////////
//  Modification history:
//  
//
///////////////////////////////////////////////////////////


#if !defined(VRefCountPol_6544A33C_9B31_40a4_965A_E1FBA9CC91B4__INCLUDED_)
#define VRefCountPol_6544A33C_9B31_40a4_965A_E1FBA9CC91B4__INCLUDED_

#include <utils/smartptr/VRefCountSharedStorage.h>

/**
* Teilt sich das gleiche Target mit mehreren Pointern, wenn kein Pointer mehr auf
* das Objekt verweist wird es freigegeben
* 
* set: erstellt einen neue VRefCountSharedStorage
* clone: erhoeht den RefCount der Storage des geklonten Objekts um eins
* @author sheijk
* @version 1.0
* @updated 19-Mar-2003 03:02:21
*/
template<class StoragePolicy>
class VRefCountPol
{
private:
	typedef StoragePolicy::TargetType TargetType;
	
	typedef VRefCountPol<StoragePolicy> Type;
	typedef VRefCountSharedStorage<StoragePolicy> SharedStorage;

	SharedStorage* m_pSharedStorage;

	void CreateSharedStorage(TargetType in_Subject);
public:
	VRefCountPol();
	~VRefCountPol();

	TargetType Get();
	void Set(TargetType in_NewVal);
	void Release();
	void Clone(const Type& in_Other);
};

#include "VRefCountPol.inl"

#endif // !defined(VRefCountPol_6544A33C_9B31_40a4_965A_E1FBA9CC91B4__INCLUDED_)
