Worklog von sheijk
-------------------------------------------------------------------------------
----- messages to sheijk:

Das Feature VOpenGLDevice::ApplyMaterial() fixen --ins :)

-------------------------------------------------------------------------------
----- current assigned tasks:

- velox design
- skripting moeglichkeiten erforschen (www.swigs.org, etc)
- editor planung
- graphics system erweitern + ueberarbeiten

-------------------------------------------------------------------------------
----- random thoughts:
eine map fuer xml files? (config.services.vfs.filename = "vfs.dll" etc.),

Mem manager: fuer erzwungene Haltepunkte bei bestimmten Allokationen:
ForceBreakpointOnMemAlloc(int num, string module); Funktion, die zu jeder Zeit
aufgerufen werden kann (kann dann im entsprechenden modul, oder an beliebiger
Stelle aufgerufen werden)

Doku:
	Tutorials fuer
		Exceptions
		RangeIteratoren
		Schreiben von Services
	Infos ueber
		Velox Architektur

-------------------------------------------------------------------------------
----- last things sheijk finished:

15.10.05
- IVTexture anstatt VTextureState in resourcen speichern
- VTrackball + VMouseTrackball
- 4 shapes fuer debuggingzwecke (v3d/scene/shapes/..)
- shooting, um eine textur auf die szene zu projizieren
- neues skript zum de-inlinen von member funktionen (klappt noch nicht mit VC)

06.10.05
- VRBTransform und kameras ueberarbeitet

01.10.05
- editor gefixt, so dass er mit dem neuen graphics scene zeug zusammen arbeitet
- model part/rigid body part/scene manager part fix: objekte lassen sich
  wieder durch nachrichten per editor bewegen
- v3dstats script

23.09.05
- graphics architecture (api/v3d/scene): finales system

11.09.05
- entity system: connections in VPartBase koennen optional sein, passendes
  beispiel im entity example

06.09.05
- neues geometrie generations "framework" das mit dem resource system
  zusammen arbeitet (-> IVMeshGenerator), polar sphere darauf portiert

05.09.05
- 3ds loader fix: meshes werden in die resource (bzw. unterresource) geladen,
  in welcher das model liegt

04.09.05
- szenen speichern und laden
- xml element in datei speichern
- body part: position im editor aendern

03.09.05
- eclipse rendering problem (hoffentlich) gefixt
- kamerapositionen der keyboard kamera speichern
- mouse navigation (translation only) fuer render layer

01.09.05
- scene dokumente erzeugen (per wizard)
- render layer mit anpassung der groesse des renderings
- scene editor (stuerzt beim rendern ab :\)
- rendern im scene editor stuertzt noch ab
- navigieren per maus im renderlayer
- die elende gl extension debug ausgaben aus dem device entfernt

31.08.05
- parts aus entity loeschen
- parts mit messages bearbeiten
- dependencies im scene view anzeigen
- deaktivieren von entites mit parts welche nicht korrekt connected sind
- scene view: synchronisation mit VEntity, erzeugen von entities, parts

30.08.05
- entity system: VFourCC durch std::string ersetzt
- editor fixes
- parameter fuer cgfx materials
- (buggy) textur support fuer cgfx

18.08.05
- rudimentaerer cgfx support
- material system umgestellt: mehrere klassen fuer materialien, je nach
  features (fixed function pipeline, cgfx, glsl, ...), erstmal nur ff pipeline
  implementiert
- material erzeugung aus device entfernt

??.08.05
- V3D_DEPRECATED makro (VDeprecated.h)
- VTypeInfo
- Resource System nutzt VTypeInfo, so dass Derived resource daten auch als
  Base daten angefordert werden koennen 
  (AddData<Derived>(..); .. GetData<Base>() geht)

02.08.05
- Entity System ueberarbeitet
- Messaging System
- Scene Parser

18.07.05
- XML Service Objekte koennen geaendert werden (nodes hinzufuegen, ...)
- erste Editorversion
- VFS, Resource, Properties View
- Scene Edit View mit Preview

14.07.05
- Texturkram von Lars gefixt
- erste Version des Velox Editors
- Property Service gibt Liste aller Properties raus
- VFS geht auch ohne vfs.xml (mountet dann aber nichts)
- doppelten VStreamReader aus XML Service entfernt
- kleinere Fixes fuer den Editor

15.06.2005
- v3dgengetset.sh, Fixes an den Skripts
- erste Unterstuetzung fuer Beleuchtung, Beispiel in Graphics Demo

03.06.2005
- DLL Exports nochmal gefixt
- Den VWindow32Context von Lars eingebaut. Damit sollten pbuffer auch recht
  schnell einbaubar sein, sobald die Implementation steht
- IVRenderContext um SwapBuffers methode erweitert

02.06.2005
- DLL Exports korrigiert: DLLExports.def Datei, Symbole heissen jetzt
  Initialize/Shutdown statt #@Initialize@!#fassad23.. usw.
- Workdirs geaendert: alle Workdirs fuer Examples in Workdir/Examples
  kombiniert (-> ftp/def_workdir). Workdir Einstellungen in Projekten waren 
  verloren gegangen
- Changes aus dem Trunk in den gccport gemergt

25.05.2005
- mbuild.xml erstellt
- .vcproj Files umgestellt: nach MSVC71 verschoben, mit mbuild.xml abgeglichen
- alte Projekte entfernt
- Examples an veraenderte Graphics API angepasst
- mbuild .vcproj Templates fuer lib und dll aktualisiert/gefixt

22.05.2005
- erst Rohversion der Rendering Architecture (V3d/Scene)
- VSTLAccessorRangePolicy

21.05.2005
- neue range iterator policy (um z.bsp. einen iterator zu erzeugen der ueber
  die values einer std::map laeuft, usw.). Ist durch policies fuer beliebige
  objekt "manipulationen" adaptierbar (it->second zurueckgeben, (*it)+1 zurueck
  geben, typ konvertierungen usw.
- VModelMesh auf Resource Manager umgestellt + daraus resultierende Aenderung
  am Grafikzeug vorgenommen (const correctness issues)

20.05.2005
- Entity Example um Beispiel fuer hierarchische Entities erweitert

18.05.2005
- Entity System erweitert: Entities koennen eine hyrarchie bilden, Entity Parts
  werden ueber ihren "Parent" informiert
- alle Smart Pointer auf VSharedPtr umgestellt, alte Smart Pointer entfernt
- IVDrawList geaendert, so dass Ids verwendet werden (zum entfernen von objekten)

20.04.2005
- Altlasten entfernt (mulit pass drawlist, portal quatsch)

19.04.2005
- Mesh und Material getrennt. Interface der DrawList angepasst

09.04.2005
- Support fuer CG Vertex und Pixelshader
- Parameter fuer Shader in der Effect Description (bisher nur model-view matrix)
- Boost Build v2 Buildfiles

23.03.2005
- Support fuer Device interne Buffer entfernt
- Material Description Support entfernt
- VMaterialDescription entfernt (? oder irgendwann vorher/nachher)

05.03.2005
- Alle OpenGL includes auf V3d/OpenGL umgestellt
- CubeMap Support (u.u. nicht nicht korrekt, mangels normalen)
- Normalen Support
- Zugriffs Funktionen fuer VVertexBuffer
- GetX usw Funktionen in VVector<3,..>, const correctness
- Skybox fuer Resource Manager
- Resource Manager kann Daten auch per RTTI einordnen
- VKeyboardCamera erweitert, kann jetzt komplett per Tastatur bedient werden

20.02.2005
- Resource Manager erweitert: Durch spezialisieren von GetTypeIdName in
	VResourceData.h koennen Klassen andere Typ Ids als die Standardmaessige
	haben. Sinnvoll vor allem, damit Klassen die TypeId des Interfaces was sie
	implementieren benutzen koennen
	
19.02.2005
- Exceptions durch vout und fehlenden Konsolen Service entfernt, beim Werfen
  neuer Exceptions wird eine Meldung per OutputDebugString gesendet

18.02.2005
- Range Iteratoren ins Projekt aufgenommen
- XML Service, VFS, Input Service, alten Graphic SG auf Range Iteratoren
	umgestellt
- IVContainer mangels Sinn geloescht

15.02.2005
- mesh loader kann indices und ist fertig
- effect loader, um effect descriptions aus uml dateien zu laden

14.02.2005
- textur koordinaten support im model loader
- Scripts ins CVS getan (Workspace/Templates/Scripts)

13.02.2005
- erste version vom model loader
- kleinere xml service extras
- VertexBuffer etc Klassen

12.02.2005
- Application Templates
- diverse bash Skripts

bis Februar 2005
- OS X Port angefangen
- RangeIteratoren
- ..

16.11.2004
- VSharedPtr umgestellt, wrappt jetzt einen boost::shared_ptr
- Managed Resource Types fuer VImage und VTextureState
- Device kann Texturen aus dem Resource Manager laden

06.11.2004
- Resource Manager

05.11.2004
- perl skripts zum erzeugen von erstellen von klassen/interfaces (by seb)

17.10.2004
- VSharedPtr. (sollte statt VPointer<T>::SharedPtr benutzt werden, bzw ist das
  selbe)
- UnitTest Framework wieder brauchbar gemacht
- neue Tests fuer VSharedPtr

14.10.2004
- Erste Version der Racer App fertig
- Einige Entity Part Typen fuer Meshes, Festkoerper(Position,etc), Kamera usw

11.10.2004
- Racer App angefangen
- Bugfixing im Device
- Application Template fixed

10.10.2004
- Entity System Example incl. Doku

09.10.2004
- Entity System

27.09.2004
- GraphicsDemo ausfuehrlich dokumentiert/kommentiert

26.09.2004
- ExternalLibs Struktur umgestellt
- GraphicsDemo geschrieben
- Bugfixing

25.09.2004
- VDisplaySettings
- Property Manager
- Abhaengigkeiten von IVDevice.h reduziert (nur noch noetiges includen,
  forward deklarationen etc)
- Mechanismus zum animieren von States (bisher nur der Gruenanteil der Default
  Color)
- Animieren der Default Farbe und der Textur Matrix moeglich

24.09.2004
- Multipass Effekte

23.09.2004
- Bug im Update Manager gefixt:	falsche frame duration bei erstem aufruf
- weitere Hilfsfunktionen + Typen um Effect Descriptions bequem zu erstellen

22.09.2004
- diverse Hilfsfunktionen um States in einer Effect Description zu erzeugen
  (siehe V3dLib/Graphics/Materials StateTypes.h, EffectUtils.h, VModeTypeInfo.h)
- Vertex Buffer im Device verwenden Reference Counting und werden automatisch
  freigegeben
- Texturen koennen ueber Effect Description gesetzt werden (erstmal nur per
  Buffer Referenz)
- Fehler im Window Service (doppeltes Input Manager loeschen) gefixt

31.08.2004
= Blending + Misc States werden aus Effect Description geladen (Format/Namen siehe
Source in VMiscState.cpp, VMistState(VRenderPass)
= Blending State Klassen in Misc Klassen gemergt
= VDIInputManager: Fehler beim Finden unbekannter Geraetetypen gefixt (werden
jetzt ignoriert)
= VEffectDescription in Device eingebaut,
= State erzeugen bisher nur Default States
= VEffectDescription erstellt

27.08.2004
VMeshDescription refeactored: alle Member private gemacht, Getter+Setter
Funktionen geschrieben, VDataFormat Klasse statt ByteDataRef. Source angepasst

21.07.2004
Erste Version des Memory Leak Finders ist fertig, bisher nur in der CoreLib
eingebaut. Kann Mem Leaks in allen Modulen entdecken, und Ausgeben

07.07.2004
Terrain Texture Generator laedt Heightmap
einfaches erstellen von terrain texturen
anzeigen von terrain heightmap + textur

05.07.2004
Terrain Texture Generator: User Interface zum Grossteil fertig

04.07.2004
Fehler im Image Service und VImage gefixt

20.06.2004
VImage um praktische Funktionen erweitert
Toolbar klappt

19.06.2004
detail texturen fuers terrain
fast eine toolbar mit wxwidgets

18.06.2004
Editor Nachrichtensystem
Editor Tool/Dokumentensystem
Terrain Texture Generator Skeleton
VQuadMesh

11.06.2004
Editor Message System angefangen

09.06.2004
diverse modi fuer das camera tool

08.06.2004
Kamera Steuerungs Plugin (provisorisch in VEditorApp.cpp :))

06.06.2004
Erste Editor Version. Plugins sind moeglich, Demo Plugin (Text Ausgabe) vorhanden,
Rendern in Editor moeglich

05.06.2004
Erste Editor Version: Plugins koennen registriert werden + werden samt ihrer
Aktionen ins Menu eingetragen

03.06.2004
V3dLib/Utils/VCommandManager.h

02.06.2004
ruckler wg zu vielen lod updates von terrain entfernt
terrain kann wireframe uebers terrain legen

27.05.2004
V3dLib/Utils/VFrameCounter

25.05.2004
Terragen 8-bit Raw Heightmaps werden geladen
Texturierung

23.05.2004
Terrain Renderer fuellt Cracks zwischen unterschiedlichen Lod Stufen

15.05.2004
IVCamera + VCamera angepasst
Terrain Renderer berechnet + zeigt passende Lod Stufen

10.05.2004
terrain: mehrere chunks koennen zu einer map zusammen gefuegt werden

09.05.2004
Terrain: wechseln zwischen lod stufen fuer chunks

02.05.2004
VBox an Geometry Generater Konvention (s.o.) angepasst

01.05.2004
v3dlib/math/arrayops.h

24.04.2004
boost signal lib eingebaut
callback fuer befehle in konsolen service aufgenommen
ftp: sheijk/boost update.rar nach Local/ExternalLibs/boost entzippen
VServicePtr geschrieben + policies fuer alle services erstellt

19.04.2004
v3dlib/containers/varray2d aus altem cvs geholt + aufpoliert

18.04.2004
VBuffer wieder gefixt, so dass der konvertierungs c'tor klappt + nicht mehr
alle member public sein muessen

13.04.2004
IVDevice: buffer ueberschreibbar
(achtung: geht nur mit immediate render method)
ueberschreibbare buffer im device
direktes rendern von buffern welche nicht im device sind

12.04.2004
neue VHeightmap implementation
VMaterialDescription: color buffer maskierung
terrain portal sektor

11.04.2004
VMultipassDrawList

10.04.2004
V3dLib/Graphics/Misc/VKeyboardCamera
V3dlib/graphics/geometry/vresizablegeometry + vdynamicgeometry
z-buffer settings in mat. descr.
VTerrainChunk
VMultipassDrawList

09.04.2004
Buffer Operationen (BufferManipulations.h)
einige utilities
Util Lib zum grossteil nach v3dlib getan, v3dlib organisiert
namespaces zusammengefasst

07.04.2004
VPolarSphere: Halb/Teilkugeln (oben/unten angabe), Textur Koordinaten
default Color fuer mat. desc eingestellt
default Vertex structs

04.04.2004
alle Services zu einem project file zusammengefasst
example app aufgeraeumt
module auf VModuleBase umgestellt
VTextureStateCategory.cpp erzeugt

02.04.2004
angefangen mit Sprite Tests

01.04.2004
Console + WxWindows Services auf neues wx Modul System umgestellt

31.03.2004
Alle Services bis auf xml in einem Project File zusammengefasst
Modul Abstraktion eingebaut: statt DLLEntry Fkt von VModuleBase
ableiten + 1 globale Instanz der Klasse erstellen.

29.03.2004
VMaterialDescription erweitert (teilweise noch ohne Implementierung)
Details am Gfx Kram geaendert, erweitert use

18.03.2004
VPolarSphere und VGeometryData in eigene Datei gepackt und committet

16.03.2004
VOpenGLIndexMesh gefixt: daten layout wird beachtet
VPolarSphere geschrieben (Aequator/Pol Kugel)

15.03.2004
View/Model Matrix Kombination gefixt
kleine Performance Demo in die Example App gebaut ;)

14.03.2004
Einige alte Dateileichen aus dem CVS entfernt
Translate Fkt zu den Geometrie (Rotations) Funktionen hinzugefuegt
UtilsLib VS Projectfile Ornderstruktur etwas umsortiert

11.03.2004
Kamera Bewegung in der Example App Zeitabhaengig gemacht

10.03.2004
Erste Version des SceneGraphen fertig gestellt
SetMatrix Methode ins Device aufgenommen
DeviceMatrix geschrieben

06.03.2004
Mathlib ueberarbeitet: inkonsistenz zwischen matrix * matrix und vektor * vektor
Multiplikation beseitigt, und mit Mult koennen jetzt auch Matrizen verschiedener
Groesse multipliziert werden (4x3 * 3x5 -> 4x5)

23.02.2004
erzeugung von mesh + material verbunden, mesh - material hat jetzt 1:1 assoziation
material aus drawlist VModel genommen, mat wird jetzt uebers mesh.GetMaterial
bestimmt

22.02.2004
erste mem manager version (noch nicht im cvs)
image lib fix: tga loader einkommentiert + exception bei fehlern
verschiedene geometry typen fuer meshes + utils fuer ogl

21.02.2004
draw list geschrieben, mit simpelst implementation
mem manager spass

20.02.2004
texturen + poly mode sind als material umsetzbar
render state lists
render state categories und category list
cat list kann state list aus mat descr erzeugen
materialien werden vom device erzeugt und geloescht
device kann states setzen

19.02.2004
Textur und Polygon Mode States erzeugt, setzen von states durch state objekte
material description
textur buffer
tex coords in meshes unterstuetzt
renderer stuertzt nicht mehr ab wenn nicht alle vertex daten typen genutzt

18.02.2004
Int/Float Buffer durch "generische" Buffer ersetzt
indexed und non indexed rendering methods zu einer kombiniert die beides nach
bedarf kann (fuer ogl immediate mode)

15.02.2004
Den Code aus dem CVS gefixt.. (input manager und window service)

13.02.2004
ein wenig an VString rumgebastelt, ihr habts ja bemerkt ;)

10.02.2004
VIteratorBases: benutzung von smart pointern, damit hoffentlich mem leak behoben

09.02.2004
VString Fehler behoben + Mem Leak beseitigt

04.02.2004
Etwas javadoc Kommantare ergaenzt

02.02.2004
Kleine Updates der Coding Guidelines

24.01.2004
Ausgabeverzeichnisse und External Libs von velox/workspace/local nach velox/local
bewegt

23.01.2004
Geometry Utils zum leichteren Erzeugen von Float Buffer und Mesh Descriptions
hinzugefuegt

22.01.2004
Util Fkten zum Erzeugen von Geometrie erstellt

21.01.2004
Hilfsfunktionen fuer das Schreiben von Geometiedaten in Float Buffer angefangen
diverse nervenzusammenbrueche durchgestanden

18.01.2004
Einige Simple Datentypen fuer die Grafik API erstellt

20.12.2003
Dokumentationen mit Author Tags versehn
Wer hat nen geilen Einfall fuer das Design vom USG? :\

22.12.2003
VConsoleFrame: groesse geaendert, damit das ding auf meinen kleinen desktop passt :)
und die fkt zum erstellen des frames umgeschrieben, so dass man nicht mehr 25 minuten
fuer ne groessenaenderung braucht ;)

19.12.2003
Grundgeruest fuer das Graphics Device implementiert

15.12.2003
VList samt kleinem Test fertig implementiert, es fehlen nur noch ein paar kleinere Hilfsfunktionen
und Const Iteratoren

12.12.2003
STL Wrapper Iteratoren Policies ueberarbeitet, </> Vergleiche funktionieren jetzt mit
random_access_iteratoren (und auch nur damit, wies sein soll)

05.12.2003
Iteratoren ueberarbeitet. Anstatt von IVIteratorPol abgeleiteter Klassen koennen jetzt auch
eigene Versionen abgeleitet werden, muessen gleiche public Signatur haben wie VIteratorBase
ins VIteratorBase.h. Damit bekommt man dann STL konforme Iteratoren durch Implementation von
4 Funktionen

19.11.2003
Erste Mesh Description Version implementiert

12.11.2003
VFileStream.SetSize() implementiert

09.11.2003
Module Klasse entworfen, damit die .dll Sourcen leichter auf andere Systeme
portiert werden koennen

07.11.2003
VFS kann die Groessen von Dateien mittels IVFile::Clear oder IVBufferStream::SetSize
aendern. IVBufferStream in die Stream Hyrarchie aufgenommen
(Funktion mangels MSDN noch nicht implementiert)

einige kleinere Aenderungen

01.11.2003
nur damit das hier nicht so aussieht als wuerd ich gar nix mehr machen: ;)
neue UML Model Struktur, diverse Designs usw.

09.09.2003
UpdateManager Service geschrieben
Konsole benutzt Update Manager
Bug in SendDebugMessage behoben
VObjectRegistry: nur noch VNamedObjects koennne sich (un-)registrieren

08.09.2003
V3D_DEBUGMSG gefixt
SafeDelete + SafeDeleteArray Fkten
Project Files gefixt (falsche Ausgabe Dateinamen von UtilsLib + CommonServices)
Vorlagen fuer Service + Lib Projekte in Workspace/Templates
Templates fuer Velox Files ueberarbeitet
cout durch vout ersetzt

06.09.2003
Shutdown Bug gefixt

05.09.2003
ConfigProvider Service
SharedPtr.DropOwnership

04.09.2003
erste Mathlib Version fertig

02.08.2003
Zugriffsrechte koennen im .xml File gesetzt werden
Mounten von Verzeichnissen + Dateien
Erstellen komplett virtueller Verzeichnisse im vfs.xml File
Parsen der vfs.xml Config Datei, lesen vom Mount Infos, Verzeichnissen
VAccessRightsFlags eingebaut, zur Vereinfachung
CreateFile/DeleteFile
Fehler der SmartPointer entfernt

01.08.2003
diverses Design Zeug
CreateSubdir/DeleteSubdir Funktionen fuers Vfs

28.07.2003
Iteratoren Tutorial
Ueberpruefung der Zugriffsrechte von Dateien und Dateistreams
Problem mit SmartPointer beseitigt (operator=(T*) war unsinnig/fehlertraechtig)

25.07.2003
Virtual File System geaddet. Verzeichnisse koennen gemounted werden, und Dateien
zum lesen/schreiben geoeffnet werden
IteratorPolicy fuer STL Container die Zeiger/SmartPointer/Iteratoren enthalten
comittet

20.07.2003
Iteratoren (mit SmartPointer aehnlichem Verhalten zum Zurueckgeben von Iteratoren
aus DLLs), und ueberarbeitete Version der SmartPointer sowie Tests dafuer
fertig gestellt und committet

06.07.2003
VArray erstellt
VMemoryStream erstellt + Factory Methode zu IVStreamFactory hinzugefuegt
VIOException
Tests fuer VMemoryStream

03.07.2003
SmartPointer Tutorial liegt in Doc/Tutorials/SmartPointers
Doc/veloxdoc.css: StyleSheet fuer die Dokumentation, in alle .html eingebunden

01.07.2003
Neue SmartPointer sind einsatzbereit

17.06.2003
IVStreamFactory: wird als "vfs.strfact" registriert, zum erzeugen von Streams
Bug in SharedPtr behoben
Tests fuer IVStream und VFileStream geschrieben
Details am Unittest System geaendert

16.06.2003
Stream Factory fuers Vfs

14.06.2003
Das UnitTest Framework ist in Service Form (wieder) einsatzbereit

13.06.2003
Interface fuer Iteratoren sowie ein Template um STL konforme Iteratoren damit
zu wrappen geschrieben (API/v3d/Core/Wrappers/IVIterator.h,..)

UnitTest Framework in einen Service umgeschrieben, Velox.vcproj in der Konfig.
UnitTests erzeugen.

12.06.2003
Projekt Files ueberarbeitet: KernelLib wird jetzt auch benutzt

11.06.2003
VArrayStorage erzeugt, damit Arrays in SmartPointern gespeichert werden
koennen

10.06.2003
Ein paar Aenderungen an den Project Files vorgenommen, Velox laesst sich wieder
kompilieren und linken

06.06.2003
std::string aus dem Core entfernt, und durch VStringParam/VStringRetVal/VString
ersetzt
Project Files auf Multithreaded DLL gestellt, Kernel in KernelLib verbannt
Services: Name kann im Konstruktor angegeben werden

05.06.2003
VNamedObject usw.: std::string aus Interfaces entfernt

03.06.2003
IVIterator und IVContainer erstellt
Altes UnitTest Framework entfernt

02.06.2003
V3D_DEBUGMSG Makro in VLogging.h erstellt, zum senden von Debug Nachrichten
an den Error Service ala OutputDebugString

27.05.2003
VFileStream und VLegalOperations in der Implementation des VFS, koennen als
vorlauefiger VFS Ersatz benutzt werden (ins eigene Projekt kopieren)
Kernel geaendert: in der xml datei steht jetzt nur noch, wie die main app
heisst, sie muss zusaetzlich als service geladen werden. Dadurch kann
beeinflusst werden wann die Main App geladen wird (siehe
Workspace/Workdir/init.xml) Projektfiles geaendert, neues Arbeitsverzeichnis,
uebersichtlichere Ausgabe Verzeichnisse und Verwendung von Project File Makros

25.05.2003
Den Error Service "verhunzt", ein paar Kommentare im Source verteilt

19.05.2003
XML Service Header ins CVS committet, Implementation fehlt noch, kann daher noch
nicht benutzt werden

17.05.2003
UnitTest Framework ins neue CVS portiert

16.05.2003
Velox an VS.Net 2003 angepasst, Datei fuer Ziel Definition von Velox angelegt
(Doc/Information/GoalDefinition.html), Projektfiles ins CVS aufgenommen

14.05.2003
Vfs Interface erstellt, Vfs Xml Configdatei erzeugt, String Wrapper
geschrieben (VString)

07.05.2003
Neues CVS Modul angelegt

06.05.2003
XMLWrapper geplant

05.05.2003
Entwuerfe fuer den Vfs Service, und den XML Wrapper

02.05.2003
- CoreLib, ExampleService und Kernel in Namespaces verpackt
- Code an Coding Guidelines angepasst

01.05.2003
- Weitere Sources ins neue CVS portiert
- Geschwindigkeitstest mit Exceptions gemacht
- Coding Guidelines in Html verwandelt, umgeschrieben und erweitert
- Issues in issues.html exportiert und neu formatiert

30.4.2003
- Neue Velox Verzeichnisstruktur erstellt
- neue Velox Aufteilung nach den Services begonnen
- Kernel sowie ObjectRegistry, SmartPointer und ExampleService portiert.

