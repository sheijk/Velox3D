Worklog von sheijk
--------------------------------------------------------------------------------
----- messages to sheijk:
TODO: Die ObjectRegistry schmiert ab, wenn 2 services gleichen types versucht werden
zu laden. Nett wäre es wenn die O.R. das abfangen kann, wenn in den xml files
die gleichen services stehen -[ins]


--------------------------------------------------------------------------------
----- current assigned tasks:

- vfs service
- velox design
- netzwerk + scripting planen

--------------------------------------------------------------------------------
----- random thoughts:
eine map fuer xml files? (config.services.vfs.filename = "vfs.dll" etc.),
dafuer ein any objekt, was strings speichert und in bel. datentypen mittels
template member konvertiert?

--------------------------------------------------------------------------------
----- personal todo:

	Klasse zum Laden einer DLL (fuer Kernel, und sonstiges)
Vfs:
	Archive
	Dokumentation

Doku:
	Tutorials fuer
		Exceptions
		Iteratoren verbessern
		SmartPointer erweitern (erzeugen eigener Policies)
		Virtual File System
			benutzen (laden/schreiben von Daten)
			erweitern (DataProvider)
		Schreiben von Services
	Infos ueber 
		Velox Architektur
		Services
	
Netzwerk, Scripting planen
Graphics Device: Design
SceneGraph / Engine Architektur
Editor Plugin System Design
Auf die Langnese Insel ziehen

--------------------------------------------------------------------------------
----- last things sheijk finished:

log:

05.09.2003
ConfigProvider Service
SharedPtr.DropOwnership

04.09.2003
erste Mathlib Version fertig

02.08.2003
Zugriffsrechte koennen im .xml File gesetzt werden
Mounten von Verzeichnissen + Dateien
Erstellen komplett virtueller Verzeichnisse im vfs.xml File
Parsen der vfs.xml Config Datei, lesen vom Mount Infos, Verzeichnissen
VAccessRightsFlags eingebaut, zur Vereinfachung
CreateFile/DeleteFile
Fehler der SmartPointer entfernt

01.08.2003
diverses Design Zeug
CreateSubdir/DeleteSubdir Funktionen fuers Vfs

28.07.2003
Iteratoren Tutorial
Ueberpruefung der Zugriffsrechte von Dateien und Dateistreams
Problem mit SmartPointer beseitigt (operator=(T*) war unsinnig/fehlertraechtig)

25.07.2003
Virtual File System geaddet. Verzeichnisse koennen gemounted werden, und Dateien
zum lesen/schreiben geoeffnet werden
IteratorPolicy fuer STL Container die Zeiger/SmartPointer/Iteratoren enthalten
comittet

20.07.2003
Iteratoren (mit SmartPointer aehnlichem Verhalten zum Zurueckgeben von Iteratoren
aus DLLs), und ueberarbeitete Version der SmartPointer sowie Tests dafuer 
fertig gestellt und committet

06.07.2003
VArray erstellt
VMemoryStream erstellt + Factory Methode zu IVStreamFactory hinzugefuegt
VIOException
Tests fuer VMemoryStream

03.07.2003
SmartPointer Tutorial liegt in Doc/Tutorials/SmartPointers
Doc/veloxdoc.css: StyleSheet fuer die Dokumentation, in alle .html eingebunden

01.07.2003
Neue SmartPointer sind einsatzbereit

17.06.2003
IVStreamFactory: wird als "vfs.strfact" registriert, zum erzeugen von Streams
Bug in SharedPtr behoben
Tests fuer IVStream und VFileStream geschrieben
Details am Unittest System geaendert

16.06.2003
Stream Factory fuers Vfs

14.06.2003
Das UnitTest Framework ist in Service Form (wieder) einsatzbereit

13.06.2003
Interface fuer Iteratoren sowie ein Template um STL konforme Iteratoren damit
zu wrappen geschrieben (API/v3d/Core/Wrappers/IVIterator.h,..)

UnitTest Framework in einen Service umgeschrieben, Velox.vcproj in der Konfig.
UnitTests erzeugen.

12.06.2003
Projekt Files ueberarbeitet: KernelLib wird jetzt auch benutzt

11.06.2003
VArrayStorage erzeugt, damit Arrays in SmartPointern gespeichert werden
koennen

10.06.2003
Ein paar Aenderungen an den Project Files vorgenommen, Velox laesst sich wieder
kompilieren und linken

06.06.2003
std::string aus dem Core entfernt, und durch VStringParam/VStringRetVal/VString
ersetzt
Project Files auf Multithreaded DLL gestellt, Kernel in KernelLib verbannt
Services: Name kann im Konstruktor angegeben werden

05.06.2003
VNamedObject usw.: std::string aus Interfaces entfernt

03.06.2003
IVIterator und IVContainer erstellt
Altes UnitTest Framework entfernt

02.06.2003
V3D_DEBUGMSG Makro in VLogging.h erstellt, zum senden von Debug Nachrichten
an den Error Service ala OutputDebugString

27.05.2003
VFileStream und VLegalOperations in der Implementation des VFS, koennen als 
vorlauefiger VFS Ersatz benutzt werden (ins eigene Projekt kopieren)
Kernel geaendert: in der xml datei steht jetzt nur noch, wie die main app 
heisst, sie muss zusaetzlich als service geladen werden. Dadurch kann 
beeinflusst werden wann die Main App geladen wird (siehe 
Workspace/Workdir/init.xml) Projektfiles geaendert, neues Arbeitsverzeichnis, 
uebersichtlichere Ausgabe Verzeichnisse und Verwendung von Project File Makros

25.05.2003
Den Error Service "verhunzt", ein paar Kommentare im Source verteilt

19.05.2003
XML Service Header ins CVS committet, Implementation fehlt noch, kann daher noch
nicht benutzt werden

17.05.2003
UnitTest Framework ins neue CVS portiert

16.05.2003
Velox an VS.Net 2003 angepasst, Datei fuer Ziel Definition von Velox angelegt 
(Doc/Information/GoalDefinition.html), Projektfiles ins CVS aufgenommen

14.05.2003
Vfs Interface erstellt, Vfs Xml Configdatei erzeugt, String Wrapper 
geschrieben (VString)

07.05.2003
Neues CVS Modul angelegt

06.05.2003
XMLWrapper geplant

05.05.2003
Entwuerfe fuer den Vfs Service, und den XML Wrapper

02.05.2003
- CoreLib, ExampleService und Kernel in Namespaces verpackt
- Code an Coding Guidelines angepasst

01.05.2003
- Weitere Sources ins neue CVS portiert 
- Geschwindigkeitstest mit Exceptions gemacht
- Coding Guidelines in Html verwandelt, umgeschrieben und erweitert
- Issues in issues.html exportiert und neu formatiert

30.4.2003
- Neue Velox Verzeichnisstruktur erstellt
- neue Velox Aufteilung nach den Services begonnen
- Kernel sowie ObjectRegistry, SmartPointer und ExampleService portiert.